swagger: '2.0'
info:
  description: >-
    Metadata Editor API
    

    Find out more about Editor at
    [http://editor.ihsn.org](http://editor.ihsn.org).  

    
  version: 1.0.0
  title: Metadata Editor API
  x-logo:
    url: ""
    backgroundColor: "#FFFFFF"
    altText: ""
basePath: /index.php/api/
tags:
  - name: Editor
    description: Create, update projects

  - name: External resources
    description: Manage external resources and files for projects

  - name: Collections
    description: Collections

  - name: Catalog
    description: API to browse, search and explore studies in the catalog

  - name: Metadata
    description: Access metadata and documentation available for the studies in the catalog


x-tagGroups:
  - name: Editor
    tags:
      - Editor
      - Microdata
      - Timeseries
      - External resources
      - Datafile
      - Variable

  - name: Collections
    tags:
      - Collections
  - name: Catalog
    tags:
      - Catalog
  - name: Metadata
    tags:
      - Metadata    
schemes:
  - http
paths:

  /editor:
    get:
      tags:
        - Editor
      summary: List projects
      description: List and find projects
      operationId: EditorProjects
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: keyowrds
          in: path
          title: Project search keywords
          description: Keywords for searching project by title and IDNO
          type: string
        - name: from
          in: path
          title: Start year
          description: Starting year for a project
          type: int
        - name: to
          in: path
          title: End year
          description: Project end year
          type: int
        - name: data_type
          in: path
          title: Project data type
          description: Project data type e.g. Microdata, Document, Table, ...
          type: string
        - name: page
          in: path
          title: Page
          description: Page to return for the search result
          type: int
        
        - name: sort_by
          in: path
          title: Sort results
          description: Sort results
          type: string
          enum:
          - title
          - created
          - year
        - name: sort_order
          in: path
          title: Sort order
          description: Set results sort order. Ascending = `asc`, Descending= `desc`
          type: string
          enum:
          - asc
          - desc
      responses:
        '200':
          description: successful operation
        '400':
          description: Bad input
  
    
  /editor/{id}:
    get:
      tags:
        - Editor
      summary: Get project by ID
      description: "Get study level metadata for a project"
      operationId: singleProject
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          title: Study unique ID
          description: Study unique ID number
          type: string
          required: true
      responses:
        '200':
          description: successful operation

  /editor/{id}/data_files:
    get:
      tags:
        - Editor
        - Datafile
      summary: List data files
      description: List all data files for a Microdata type project
      operationId: listDataFiles
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          title: Study unique ID
          description: Study unique ID number
          type: string
          required: true
      responses:
        '200':
          description: successful operation

  /editor/{id}/variables:
    get:
      tags:
        - Editor
        - Variable
      summary: List variables
      description: List variables by a Microdata project 
      operationId: listVariables
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          title: Study unique ID
          description: Study unique ID number
          type: string
          required: true
      responses:
        '200':
          description: successful operation
  /editor/{id}/variables/{varId}:
    get:
      tags:
        - Editor
        - Variable
      summary: Find variable
      description: Get a single variable metadata
      operationId: findSingleVariable
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          title: Study unique ID
          description: Study unique ID number
          type: string
          required: true
        - name: varId
          in: path
          title: Variable ID
          description: Variable ID
          type: string
          required: true
      responses:
        '200':
          description: successful operation
          schema:


  /editor/create/survey:
      post:
        tags:
          - Microdata
        summary: Create Microdata
        description: Create a new microdata project
        operationId: createSurvey
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - in: "body"
            name: "body"
            required: true
            schema:
              $ref: 'survey-schema.json'
        responses:
          '200':
            description: successful operation
            schema:
              $ref: 'survey-schema.json'
        security:
          - ApiKeyAuth: []

  /editor/update/survey/{id}:
      post:
        tags:
          - Microdata
        summary: Update Microdata
        description: Update Microdata project
        operationId: updateSurvey
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - in: "path"
            name: "id"
            description: Project ID
            type: string
            format: string
            required: true
          - in: "body"
            name: "body"
            required: true
            schema:
              $ref: 'survey-schema.json'
        responses:
          '200':
            description: successful operation
            schema:
              $ref: 'survey-schema.json'
        security:
          - ApiKeyAuth: []        


  /editor/create/timeseries:
      post:
        tags:
          - Timeseries
        summary: Create Timeseries
        description: Create a new timeseries project
        operationId: createTimeseries
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - in: "body"
            name: "body"
            required: true
            schema:
              $ref: 'timeseries-schema.json'
        responses:
          '200':
            description: successful operation
            schema:
              $ref: 'timeseries-schema.json'
        security:
          - ApiKeyAuth: []
  /editor/update/timeseries/{id}:
      post:
        tags:
          - Timeseries
        summary: Update Timeseries
        description: Update Timeseries project
        operationId: updateTimseries
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - in: "path"
            name: "id"
            description: Project ID
            type: string
            format: string
            required: true
          - in: "body"
            name: "body"
            required: true
            schema:
              $ref: 'timeseries-schema.json'
        responses:
          '200':
            description: successful operation
            schema:
              $ref: 'timeseries-schema.json'
        security:
          - ApiKeyAuth: []   

  /collections:
      get:
        tags:
          - Collections
        summary: List collections
        description: List collections
        operationId: listCollections
        consumes:
          - application/json
        produces:
          - application/json
        responses:
          '200':
            description: successful operation
            schema:
              $ref: "#/definitions/Collection"
        security:
          - ApiKeyAuth: []
      post:
        tags:
          - Collections
        summary: Create collection
        description: Create a new collection
        operationId: createCollection
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - in: "body"
            name: "body"
            required: true
            schema:
              $ref: "#/definitions/Collection"
        responses:
          '200':
            description: successful operation
            schema:
              $ref: "#/definitions/Collection"
        security:
          - ApiKeyAuth: []
  /collections/update/{collectionId}:      
      post:
        tags:
          - Collections
        summary: Update collection
        description: Update a collection
        operationId: updateCollection
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - in: "body"
            name: "body"
            required: true
            schema:
              $ref: "#/definitions/Collection"
        responses:
          '200':
            description: successful operation
            schema:
              $ref: "#/definitions/Collection"
        security:
          - ApiKeyAuth: []
  /collections/{id}:
      get:
        tags:
          - Collections
        summary: Get collection by ID
        description: Get collection by ID
        operationId: getCollectionById
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - name: id
            in: path
            title: Collection ID
            description: Collection ID
            type: string
            required: true
        responses:
          '200':
            description: successful operation
            schema:
              $ref: "#/definitions/CollectionList"
        security:
          - ApiKeyAuth: []
      delete:
        tags:
          - Collections
        summary: Delete collection
        description: Delete a collection
        operationId: deleteCollectionById
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - name: id
            in: path
            title: Collection ID
            description: Collection ID
            type: string
            required: true
        responses:
          '200':
            description: successful operation
        security:
          - ApiKeyAuth: []

  /collections/add_projects:
      post:
        tags:
          - Collections
        summary: Add projects to collection
        description: Add projects to collection
        operationId: addProjectsToCollection
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - in: "body"
            name: "body"
            required: true
            schema:
              $ref: "#/definitions/AddProjectsToCollection"
        responses:
          '200':
            description: successful operation
            schema:
              $ref: "#/definitions/AddProjectsToCollection"
        security:
          - ApiKeyAuth: []
  /collections/remove_project:
      post:
        tags:
          - Collections
        summary: Remove projects from collection
        description: Remove projects from collection
        operationId: removeProjectFromCollection
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - in: "body"
            name: "body"
            required: true
            schema:
              $ref: "#/definitions/AddProjectsToCollection"       
        responses:
          '200':
            description: successful operation
        security:
          - ApiKeyAuth: []

  /collections/user_access/{collectionId}:
      get:
        tags:
          - Collections
        summary: List users by collection
        description: List of users who have access to a collection
        operationId: UsersByCollection
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - in: "path"
            name: "collectionId"
            required: true
            type: integer            
        responses:
          '200':
            description: successful operation            
        security:
          - ApiKeyAuth: []
  /collections/user_access:
      post:
        tags:
          - Collections
        summary: Add users to collection
        description: Grant user access to a collection
        operationId: AddUsersToCollection
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - in: "body"
            name: "body"
            required: true
            schema:
              $ref: "#/definitions/UserCollectionAccess"
        responses:
          '200':
            description: successful operation            
        security:
          - ApiKeyAuth: []
  /collections/remove_user_access:
      post:
        tags:
          - Collections
        summary: Remove user from collection
        description: Remove user access from a collection
        operationId: RemoveUserFromCollection
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - in: "body"
            name: "body"
            required: true
            schema:
              $ref: "#/definitions/RemoveUserCollectionAccess"
        responses:
          '200':
            description: successful operation            
        security:
          - ApiKeyAuth: []
  /resources/{projectId}:
      get:
        tags:
          - External resources
        summary: List resources
        description: List documentation (Reports, Questionnaires, Tables, etc.) for a project
        operationId: ListResources
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - in: "path"
            name: "projectId"
            type: integer
            required: true            
        responses:
          '200':
            description: successful operation            
            schema:
              $ref: "resource-schema.json"
        security:
          - ApiKeyAuth: []

      post:
        tags:
          - External resources
        summary: Create resource
        description: Create a new resource for a project
        operationId: CreateResource
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - in: "path"
            name: "projectId"
            type: integer
            required: true
          - in: "formData"
            name: "dctype"
            type: string
            required: true
            description: "Resource type"
          - in: "formData"
            name: "title"
            type: string
            required: true
            description: "Resource title"            
          - in: "formData"
            name: "author"
            type: string
            required: false
          - in: "formData"
            name: "dcdate"
            type: string
            required: false
          - in: "formData"
            name: "country"
            type: string
            required: false  
          - in: "formData"
            name: "language"
            type: string
            required: false
          - in: "formData"
            name: "contributor"
            type: string
            required: false
          - in: "formData"
            name: "publisher"
            type: string
            required: false
          - in: "formData"
            name: "rights"
            type: string
            required: false
          - in: "formData"
            name: "description"
            type: string
            required: false
          - in: "formData"
            name: "abstract"
            type: string
            required: false
          - in: "formData"
            name: "toc"
            type: string
            required: false
          - in: "formData"
            name: "filename"
            type: file
            description: "Upload file"
            required: false
        responses:
          '200':
            description: successful operation            
            schema:
              $ref: "resource-schema.json"
        security:
          - ApiKeyAuth: []
  /resources/{projectId}/{resourceId}:
      post:
        tags:
          - External resources
        summary: Update resource
        description: Update external resource for a project
        operationId: UpdateResource
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - in: "path"
            name: "projectId"
            type: integer
            required: true
          - in: "path"
            name: "resourceId"
            type: integer
            required: true
          - in: "formData"
            name: "dctype"
            type: string
            required: true
            description: "Resource type"
          - in: "formData"
            name: "title"
            type: string
            required: true
            description: "Resource title"            
          - in: "formData"
            name: "author"
            type: string
            required: false
          - in: "formData"
            name: "dcdate"
            type: string
            required: false
          - in: "formData"
            name: "country"
            type: string
            required: false  
          - in: "formData"
            name: "language"
            type: string
            required: false
          - in: "formData"
            name: "contributor"
            type: string
            required: false
          - in: "formData"
            name: "publisher"
            type: string
            required: false
          - in: "formData"
            name: "rights"
            type: string
            required: false
          - in: "formData"
            name: "description"
            type: string
            required: false
          - in: "formData"
            name: "abstract"
            type: string
            required: false
          - in: "formData"
            name: "toc"
            type: string
            required: false
          - in: "formData"
            name: "filename"
            type: file
            description: "Upload file"
            required: false
        responses:
          '200':
            description: successful operation            
            schema:
              $ref: "resource-schema.json"
        security:
          - ApiKeyAuth: [] 
  /resources/write_json{projectId}:
      get:
        tags:
          - External resources
        summary: Generate JSON
        description: Generate JSON for external resources
        operationId: ResourcesWriteJSON
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - in: "path"
            type: integer
            name: "projectId"
            required: true
        responses:
          '200':
            description: successful operation            
        security:
          - ApiKeyAuth: []
  /resources/write_rdf{projectId}:
      get:
        tags:
          - External resources
        summary: Generate RDF
        description: Generate RDF for external resources
        operationId: ResourcesRdfJSON
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - in: "path"
            name: "projectId"
            type: integer
            required: true
        responses:
          '200':
            description: successful operation            
        security:
          - ApiKeyAuth: []
  /resources/rdf{projectId}:
      get:
        tags:
          - External resources
        summary: Download RDF
        description: Download RDF for external resources
        operationId: DownloadResourcesRdf
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - in: "path"
            name: "projectId"
            type: integer
            required: true
        responses:
          '200':
            description: successful operation            
        security:
          - ApiKeyAuth: []
  /resources/import/{projectId}:
      post:
        tags:
          - External resources
        summary: Import RDF or JSON
        description: Import external resources using RDF or JSON
        operationId: importResources
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - in: "path"
            name: "projectId"
            type: integer
            required: true
          - in: "formData"
            name: "file"
            type: file
            description: "Upload RDF or JSON file"
            required: true
        responses:
          '200':
            description: successful operation            
            schema:
              $ref: "resource-schema.json"
        security:
          - ApiKeyAuth: []
  /resources/delete/{projectId}/{resourceId}}:
      post:
        tags:
          - External resources
        summary: Delete resource
        description: Delete external resource for a project
        operationId: deleteResource
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - in: "path"
            name: "projectId"
            type: integer
            required: true
          - in: "path"
            name: "resourceId"
            type: integer
            required: true          
        responses:
          '200':
            description: successful operation            
        security:
          - ApiKeyAuth: []
###############################################################
definitions:
  Collection:
    type: object
    properties:
      title:
        type: string
        required: true
      description:
        type: string
    xml:
      name: collection
  CollectionList:
    type: object
    properties:
      id:
        type: integer        
      title:
        type: string
      description:
        type: string
      created:
        type: string
        format: date-time
      changed:
        type: string
        format: date-time
      created_by:
        type: integer
        format: int64
      changed_by:
        type: integer
        format: int64
      username:
        type: string
    xml:
      name: CollectionList
  AddProjectsToCollection:
    type: object
    properties:
      collection_id:
        type: integer
        required: true
      id_format:
        type: string
        default: "id"
        enum:
          - id
          - idno                
      projects:
        type: array
        items:
          type: string        
    xml:
      name: AddProjectsToCollection
  UserCollectionAccess:
    type: object
    properties:
      collection_id:
        type: integer
        required: true
      user_id:        
        type: integer
        format: int64   
        required: true
      permissions:
        type: array
        items:
          type: string
          enum:
            - view
            - edit
            - admin
  RemoveUserCollectionAccess:
    type: object
    properties:
      collection_id:
        type: integer
        required: true
      user_id:        
        type: integer
        format: int64   
        required: true

  AuthenticationResponse:
    type: object
    properties:
      id:
        type: integer
        format: int64
        readOnly: true
      user_id:
        type: int      
      username:
        type: string
      api-keys:
        type: object  
    xml:
      name: AuthenticationResponse    
  Resource:
    type: object
    properties:
      id:
        type: integer
        format: int64
        readOnly: true
      pid:
        type: integer
        format: int64
        description: Project ID
      resource_type:
        type: string
        enum:
          - microdata
          - questionnaire
          - report
          - table
          - other
      title:
        type: string
      description:
        type: string
      filename:
        type: string
      created:
        type: string
        format: date-time
      changed:
        type: string
        format: date-time
    xml:
      name: Resource
  
  
  
  
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
